//
//  Product.pch
//  Product
//
//  Created by apple on 2016/12/26.
//  Copyright © 2016年 apple. All rights reserved.
//

#ifndef Product_pch
#define Product_pch

// 头文件  导入的头文件
#import "Header.h"

// 网络请求 API
#import "API.pch"

#pragma mark -  宏定义

///颜色
#define kRGBColor(r, g, b, a) [UIColor colorWithRed:(r) / 255.0 green:(g) / 255.0 blue:(b) / 255.0 alpha:a]

#define kAllRGB kHexColor(@"#F5F5F5")

/** 字体大小 */
#define kFont(n) [UIFont systemFontOfSize:(n)]
/** 字体大小（带粗） */
#define kBoldFond(fond) [UIFont boldSystemFontOfSize:fond]


/** 导航栏高度 */
#define kNavHeight 64

// **  例如 kHexColor(@"#5E5E5E") */
#define kHexColor(colorStr) [UIColor colorWithHexString:colorStr]
/** 16进制颜色 */
#define kRGB_HEX(rgbValue)                                                                                             \
    [UIColor colorWithRed:((CGFloat)((rgbValue & 0xFF0000) >> 16)) / 255.0                                             \
                    green:((CGFloat)((rgbValue & 0xFF00) >> 8)) / 255.0                                                \
                     blue:((CGFloat)(rgbValue & 0xFF)) / 255.0                                                         \
                    alpha:1.0]

#define kRandomColor kRGBColor(arc4random_uniform(255), arc4random_uniform(255), arc4random_uniform(255), 1)

/// 归档
#define kUserDefaults [NSUserDefaults standardUserDefaults]

/// 通知
#define kNoteCenter [NSNotificationCenter defaultCenter]

/// 屏幕
#define kScreenWidth [UIScreen mainScreen].bounds.size.width

#define kScreenHeight [UIScreen mainScreen].bounds.size.height
//* 国际化语言 */
#define kLocalizedString(keyStr)  NSLocalizedString(keyStr, nil)

#define iOS7Later ([UIDevice currentDevice].systemVersion.floatValue >= 7.0f)

#define iOS8Later ([UIDevice currentDevice].systemVersion.floatValue >= 8.0f)

#define iOS9Later ([UIDevice currentDevice].systemVersion.floatValue >= 9.0f)

#define iOS10Later ([UIDevice currentDevice].systemVersion.floatValue >= 10f)

#define kiPhone4s ((kScreenHeight == 480) ? YES : NO)

#define kiPhone5s ((kScreenHeight == 568) ? YES : NO)

#define kiPhone6s_7s ((kScreenHeight == 667) ? YES : NO)

#define kiPhone6sP_7sP ((kScreenHeight == 736) ? YES : NO)


#define isPad (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
#define isPhone (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
#define isRetina ([[UIScreen mainScreen] scale] >= 2.0)
#define SCREEN_MAX_LENGTH (MAX(kScreenWidth, kScreenHeight))
#define SCREEN_MIN_LENGTH (MIN(kScreenWidth, kScreenHeight))

#define IS_IPHONE_4_OR_LESS (isPhone && SCREEN_MAX_LENGTH < 568.0)
#define IS_IPHONE_5 (isPhone && (SCREEN_MAX_LENGTH) == 568.0)
#define IS_IPHONE_6 (isPhone && (SCREEN_MAX_LENGTH) == 667.0)
#define IS_IPHONE_6P (isPhone && (SCREEN_MAX_LENGTH) == 736.0)

#define kFountSize(fountSize) (IS_IPHONE_6P ? fountSize : (fountSize / 1.2))

#define iOS11 @available(iOS 11.0, *)

/// 弱引用
#define kWeakSelf __weak typeof(self) weakSelf = self
/// 快速定义 image
#define kImageNamed(name) [UIImage imageNamed:(name)]
//frame
#define kFrame(x,y,width,height)  CGRectMake(x, y, width, height)

/// 添加圆角
#define kViewRadius(View, Radius)                                                                                      \
                                                                                                                       \
    [View.layer setCornerRadius:(Radius)];                                                                             \
    [View.layer setMasksToBounds:YES]

/// 添加边框和圆角
#define kViewBorderRadius(View, Radius, Width, Color)                                                                  \
                                                                                                                       \
    [View.layer setCornerRadius:(Radius)];                                                                             \
    [View.layer setMasksToBounds:YES];                                                                                 \
    [View.layer setBorderWidth:(Width)];                                                                               \
    [View.layer setBorderColor:[Color CGColor]]

/// 单例模式宏模板
#define SINGLETON_FOR_HEADER(className) +(className *) sharedInstance;

#define SINGLETON_FOR_CLASS(className)                                                                                 \
                                                                                                                       \
    +(className *) sharedInstance {                                                                                    \
        static className *shared##className = nil;                                                                     \
        static dispatch_once_t onceToken;                                                                              \
        dispatch_once(&onceToken, ^{                                                                                   \
            shared##className = [[self alloc] init];                                                                   \
        });                                                                                                            \
        return shared##className;                                                                                      \
    }

/**Dubug相关*/

#ifdef DEBUG
#define XXLog(format, ...)                                                                                             \
    NSLog((@"[函数名:%s]\n"                                                                                         \
            "[行号:%d]\n" format),                                                                                     \
          __FUNCTION__, __LINE__, ##__VA_ARGS__)
#else
#define XXLog(...)
#endif

#ifdef DEBUG
#define NSLog(...) NSLog(__VA_ARGS__)
#else
#define NSLog(...)
#endif


//字符串是否为空
#define kStringIsEmpty(str) ([str isKindOfClass:[NSNull class]] || str == nil || [str length] < 1 ? YES : NO )
//数组是否为空
#define kArrayIsEmpty(array) (array == nil || [array isKindOfClass:[NSNull class]] || array.count == 0)
//字典是否为空
#define kDictIsEmpty(dic) (dic == nil || [dic isKindOfClass:[NSNull class]] || dic.allKeys == 0)
//是否是空对象
#define kObjectIsEmpty(_object) (_object == nil \
|| [_object isKindOfClass:[NSNull class]] \
|| ([_object respondsToSelector:@selector(length)] && [(NSData *)_object length] == 0) \
|| ([_object respondsToSelector:@selector(count)] && [(NSArray *)_object count] == 0))


#endif /* Product_pch */
